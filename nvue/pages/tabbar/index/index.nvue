<template>
	<view class="bg-main flex-1">
		<!--导航栏 -->
		<navigator-bar ref="topBar" title="微信" number="10">
			<icon-button icon="\ue630"></icon-button>
			<icon-button icon="\ue629"></icon-button>
		</navigator-bar>
		<!-- 聊天列表 -->
		<scroller show-scrollbar="false" class="chat-lists">
			<list-item :data="item" @longpress="longpress" @onCLick="onCLick" chat iconSize="90" rightHeight="120" :img="item.img" v-for="(item, i) in chats" :key="i"></list-item>
			<!-- <block v-for="item in 20" :key="item"><chat-list @longTouch="longTouch"></chat-list></block> -->
		</scroller>
		<!-- 列表长按 出现的菜单 -->
		<c-popup ref="popup" :height="height" :width="240">
			<view class="bg-white popup-content border round-md flex-1">
				<view class="justify-center pl-3 flex-1" @click="clickMenu(item)" hover-class="bg-main" v-for="(item, i) in menus" :key="i">
					<text class="font-35 text-main-color">{{ item.text }}</text>
				</view>
			</view>
		</c-popup>
	</view>
</template>

<script>
import navigatorBar from '@/components/ui/navigation-bar.vue';
import listItem from '@/components/ui/list-item.vue';
import chatList from '@/components/ui/chat-list.vue';
import cPopup from '@/components/ui/cPopup.vue';
import iconButton from '@/components/ui/icon-button.vue';
import { mapState, mapMutations } from 'vuex';
export default {
	components: {
		cPopup,
		listItem,
		navigatorBar,
		iconButton
	},
	data() {
		return {
			chats: [],
			menus: [
				{
					text: '标位已读',
					event: ''
				},
				{
					text: '设为置顶',
					event: ''
				},
				{
					text: '删除该聊天',
					event: ''
				}
			]
		};
	},
	computed: {
		...mapState(['userInfo', 'token', 'hasLogin']),

		// 计算 悬浮菜单尺寸
		height() {
			return this.menus.length * 100;
		}
	},

	mounted() {
		this.demo();
	},
	onLoad() {},

	methods: {
		demo() {
			let obj = {
				img: '/static/images/friend.png',
				title: '测试为re',
				mute: 1,
				info: '息实施佛山地方搜i 哈哈哈哈哈哈啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊hsofh',
				time: '12:50'
			};
			for (let i = 0; i < 20; i++) {
				this.chats.push(obj);
			}
		},

		// 列表点击
		onCLick() {
			// this.$refs.popup.open();
		},
		// 聊天列表长按
		longpress(e) {
			this.$refs.popup.open(e.x, e.y);
		},
		// 点击悬浮菜单
		clickMenu(item) {}
	},
	onHide() {
		// this.$refs.topBar.close();
		console.log(this.$refs.topBar, 123);
	}
};
</script>

<style>
.name {
	font-size: 400rpx;
	color: #08c060;
}

.list {
}

.avatar {
	height: 90rpx;
	width: 90rpx;
}

.right {
	background-color: red;
}

.popup-content {
	box-shadow: 0px 2px 20px -8px rgba(0, 0, 0, 1);
}
</style>
