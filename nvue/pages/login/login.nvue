<template>
	<view class="flex login align-center flex-1">
		<view class="container flex ">
			<view class="flex-center"><image class="logo" src="../../static/logo.png" mode=""></image></view>
			<view class="welcome my-5">
				<text class="title text-bold text-main-color">{{ type == 'login' ? '登录' : '注册' }}</text>
				<text class="desc font-35 text-three-color mt-1 ">您好,欢迎来到mineChat!</text>
			</view>
			<view class="form">
				<input type="text" class="bg-white input font-30 pl-3   border-bottom" placeholder="用户名" v-model="form.username" />
				<input type="password" class="bg-white input  font-30  mt-3 pl-3 border-bottom" placeholder="密码" v-model="form.password" />
				<input type="password" class="bg-white input font-30 mt-3 pl-3 border-bottom" v-if="type == 'reg'" placeholder="请确认密码" v-model="form.rePassword" />
				<button class="button circle yellow mt-5" @click="clickBtn">
					<text class="text-main-color font-35 button-text">{{ type == 'login' ? '登录' : '注册' }}</text>
				</button>
			</view>
			<view class="other-page flex-row justify-around mt-3">
				<text v-if="type == 'login'" class="font-30 text-sec-color" @click="type = 'reg'">立即注册</text>
				<text v-else class="font-30 text-sec-color" @click="type = 'login'">立即登录</text>
				<text class="font-30 text-sec-color">忘记密码</text>
			</view>
		</view>
	</view>
</template>

<script>
import { User } from '@/model/User.js';
import { _toast } from '@/utils/util.js';
import { mapState, mapMutations, mapActions } from 'vuex';
export default {
	data() {
		return {
			type: 'login',
			locked: false,
			form: {
				username: '',
				password: '',
				rePassword: ''
			}
		};
	},

	watch: {
		type(val) {
			this.form.username = '';
			this.form.password = '';
			this.form.rePassword = '';
		}
	},
	computed: {
		...mapState(['login'])
	},
	mounted() {
		if (this.login) {
			uni.switchTab({
				url: '../tabbar/index/index'
			});
		}
	},
	created() {
		let token = uni.getStorageSync('token');
		if (token) {
			uni.switchTab({
				url: '/pages/tabbar/index/index'
			});
		}
	},

	methods: {
		...mapActions(['LOGIN']),

		clickBtn() {
			this.type == 'login' ? this._login() : this.register();
		},

		async _login() {
			if (this.validata()) {
				const res = await User.login(this.form);
				console.log(res, 'login');
				_toast('登录成功');
				// 将信息储存起来
				this.LOGIN(res.data);
				setTimeout(() => {
					uni.switchTab({
						url: '/pages/tabbar/index/index'
					});
				}, 1000);
			}
		},
		async register() {
			if (this.validata()) {
				const res = await User.register(this.form);
				_toast('注册成功,请登录');
				setTimeout(() => {
					this.type = 'login';
				}, 1000);
			}
		},

		// 数据校验
		validata() {
			if (!this.form.username || !this.form.password) {
				_toast('请输入数据');
				return false;
			}
			if (this.type == 'reg' && !this.form.rePassword) {
				_toast('请输入数据');
				return false;
			}
			if (this.type == 'reg' && this.form.rePassword != this.form.password) {
				_toast('两次密码输入不一致');
				return false;
			}
			return true;
		}
	}
};
</script>
<style scoped>
.container {
	width: 630rpx;
}

.logo {
	height: 200rpx;
	width: 200rpx;
	margin-top: 140rpx;
}
.title {
	font-size: 50rpx;
}
.input {
	height: 90rpx;
	padding-bottom: 10rpx;
}
.button {
	border-color: #f8f8f8;
	height: 80rpx;
}

.button-text {
	flex: 1;
	height: 80rpx;
	line-height: 80rpx;
	text-align: center;
}
</style>
