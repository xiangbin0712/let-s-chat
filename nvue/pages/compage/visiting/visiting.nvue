<!-- 用户详情 名片页 -->
<template>
	<view class="flex-1 bg-main">
		<view class="user-info bg-white border-bottom flex-row">
			<image class="avatar mx-3 round-md" src="../../../static/images/friend.png" mode=""></image>
			<view class="userinfo-riht">
				<text class="nickname text-bold">Mine</text>
				<text class="username font-30 text-three-color mt-1">账号:xxxxx</text>
				<text class="area font-30 text-three-color mt-1">地区:xxx</text>
			</view>
		</view>

		<view class="list border-bottom bg-white align-center mt-2 flex-row  justify-between">
			<text class="title font-35 text-main-color ml-3">朋友圈</text>
			<text class="iconfont text-three-color mr-3 font-35 ">&#xe93d;</text>
		</view>
		<view class="list border-bottom bg-white align-center mb-3 flex-row  justify-between">
			<text class="title font-35 text-main-color ml-2">更多信息</text>
			<text class="iconfont text-three-color mr-3 font-35 ">&#xe93d;</text>
		</view>

		<!-- 发消息  -->
		<view class="list flex-center bg-white flex-row" v-if="!isFriend">
			<text class="list-text font-40 text-bold iconfont mr-1">&#xe61c;</text>
			<text class="list-text font-40 text-bold">发消息</text>
		</view>
		<!-- 添加好友 -->
		<view class="list bg-white flex-center" v-else><text class="list-text text-bold font-40">添加到通讯录</text></view>
	</view>
</template>

<script>
import { Friend } from '@/model/Friend.js';
import { Search } from '@/model/Search.js';
import { mapState, mapMutations } from 'vuex';
export default {
	components: {},
	data() {
		return {
			friendId: '',
			info: null,
			isFriend: 1 // 0好友 1/不是
		};
	},
	computed: {
		...mapState(['userInfo']),
		//  添加通讯录是否显示  不是好友并且不是自己
		addShow() {
			const isMe = this.userInfo._id == this.friendId;
			if (this.isFriend && !isMe) return true;
			return false;
		},
		// 发送消息是否显示  是好友 或者是自己
		sendShow() {
			const isMe = this.userInfo._id == this.friendId;
			if (!this.isFriend || isMe) return true;
			return false;
		}
	},
	onNavigationBarButtonTap(e) {
		if (!e.index) {
		}
	},
	onLoad(options) {
		options.id ? (this.friendId = options.id) : '';
		// this.getUser(); //获取用户信息
		// this.checkFriend(); //是否好友
	},
	methods: {
		async getUser() {
			const res = await Search.searchUser('', this.friendId);
			this.info = res.data;
		},

		// 是否好友
		async checkFriend() {
			// 0 是好友  1 不是
			const res = await Friend.checkIsFriend(this.userInfo._id, this.friendId);
			res.data.msg == 'isFriend' ? (this.isFriend = 1) : (this.isFriend = 0);
		},
		send() {},

		// 好友申请
		applyFriend() {
			uni.navigateTo({
				url: `../applyFriend/applyFriend?friendId=${this.friendId}`
			});
		}
	}
};
</script>

<style scoped>
.user-info {
	padding-bottom: 60rpx;
}
.avatar {
	height: 130rpx;
	width: 130rpx;
}

.list {
	height: 100rpx;
}

.list-text {
	color: #505e97;
}
</style>
